; SPIR-V
; Version: 1.1
; Generator: Khronos LLVM/SPIR-V Translator; 14
; Bound: 189
; Schema: 0
               OpCapability Addresses ; 0x00000014
               OpCapability Linkage ; 0x0000001c
               OpCapability Kernel ; 0x00000024
               OpCapability Int64 ; 0x0000002c
               OpCapability GenericPointer ; 0x00000034
               OpCapability Int8 ; 0x0000003c
               OpCapability SubgroupDispatch ; 0x00000044
               OpCapability ExpectAssumeKHR ; 0x0000004c
               OpCapability MemoryAccessAliasingINTEL ; 0x00000054
               OpCapability OptNoneINTEL ; 0x0000005c
               OpExtension "SPV_INTEL_memory_access_aliasing" ; 0x00000064
               OpExtension "SPV_INTEL_optnone" ; 0x0000008c
               OpExtension "SPV_KHR_expect_assume" ; 0x000000a4
               OpExtension "SPV_KHR_no_integer_wrap_decoration" ; 0x000000c0
          %1 = OpExtInstImport "OpenCL.std" ; 0x000000e8
               OpMemoryModel Physical64 OpenCL ; 0x000000fc
               OpEntryPoint Kernel %15 "_ZTSZZ4mainENKUlRT_E_clIN4sycl3_V17handlerEEEDaS0_EUlNS4_7nd_itemILi3EEEE_" ; 0x00000108
               OpExecutionMode %15 SubgroupSize 32 ; 0x00000160
               OpSource OpenCL_CPP 100000 ; 0x00000170
               OpName %__spirv_BuiltInLocalInvocationId "__spirv_BuiltInLocalInvocationId" ; 0x0000017c
               OpName %__spirv_BuiltInWorkgroupId "__spirv_BuiltInWorkgroupId" ; 0x000001a8
               OpName %__spirv_BuiltInGlobalLinearId "__spirv_BuiltInGlobalLinearId" ; 0x000001cc
               OpName %__spirv_BuiltInWorkgroupSize "__spirv_BuiltInWorkgroupSize" ; 0x000001f4
               OpName %__itt_offload_wi_start_wrapper "__itt_offload_wi_start_wrapper" ; 0x0000021c
               OpName %__itt_offload_wg_barrier_wrapper "__itt_offload_wg_barrier_wrapper" ; 0x00000244
               OpName %__itt_offload_wi_resume_wrapper "__itt_offload_wi_resume_wrapper" ; 0x00000270
               OpName %__itt_offload_wi_finish_wrapper "__itt_offload_wi_finish_wrapper" ; 0x00000298
               OpName %__itt_offload_wi_start_stub "__itt_offload_wi_start_stub" ; 0x000002c0
               OpName %__itt_offload_wi_finish_stub "__itt_offload_wi_finish_stub" ; 0x000002e4
               OpName %__itt_offload_wg_barrier_stub "__itt_offload_wg_barrier_stub" ; 0x0000030c
               OpName %__itt_offload_wi_resume_stub "__itt_offload_wi_resume_stub" ; 0x00000334
         %27 = OpAliasDomainDeclINTEL ; 0x0000035c
         %28 = OpAliasScopeDeclINTEL %27 ; 0x00000364
         %29 = OpAliasDomainDeclINTEL ; 0x00000370
         %30 = OpAliasScopeDeclINTEL %29 ; 0x00000378
         %31 = OpAliasDomainDeclINTEL ; 0x00000384
         %32 = OpAliasScopeDeclINTEL %31 ; 0x0000038c
         %33 = OpAliasScopeListDeclINTEL %28 %30 %32 ; 0x00000398
               OpDecorate %__spirv_BuiltInLocalInvocationId LinkageAttributes "__spirv_BuiltInLocalInvocationId" Import ; 0x000003ac
               OpDecorate %__spirv_BuiltInLocalInvocationId Constant ; 0x000003e0
               OpDecorate %__spirv_BuiltInLocalInvocationId BuiltIn LocalInvocationId ; 0x000003ec
               OpDecorate %__spirv_BuiltInLocalInvocationId Alignment 32 ; 0x000003fc
               OpDecorate %__spirv_BuiltInWorkgroupId LinkageAttributes "__spirv_BuiltInWorkgroupId" Import ; 0x0000040c
               OpDecorate %__spirv_BuiltInWorkgroupId Constant ; 0x00000438
               OpDecorate %__spirv_BuiltInWorkgroupId BuiltIn WorkgroupId ; 0x00000444
               OpDecorate %__spirv_BuiltInWorkgroupId Alignment 32 ; 0x00000454
               OpDecorate %__spirv_BuiltInGlobalLinearId LinkageAttributes "__spirv_BuiltInGlobalLinearId" Import ; 0x00000464
               OpDecorate %__spirv_BuiltInGlobalLinearId Constant ; 0x00000494
               OpDecorate %__spirv_BuiltInGlobalLinearId BuiltIn GlobalLinearId ; 0x000004a0
               OpDecorate %__spirv_BuiltInGlobalLinearId Alignment 8 ; 0x000004b0
               OpDecorate %__spirv_BuiltInWorkgroupSize LinkageAttributes "__spirv_BuiltInWorkgroupSize" Import ; 0x000004c0
               OpDecorate %__spirv_BuiltInWorkgroupSize Constant ; 0x000004f0
               OpDecorate %__spirv_BuiltInWorkgroupSize BuiltIn WorkgroupSize ; 0x000004fc
               OpDecorate %__spirv_BuiltInWorkgroupSize Alignment 32 ; 0x0000050c
               OpDecorate %16 Alignment 4 ; 0x0000051c
               OpDecorate %17 Alignment 4 ; 0x0000052c
               OpDecorate %18 Alignment 4 ; 0x0000053c
               OpDecorate %__itt_offload_wi_start_wrapper LinkageAttributes "__itt_offload_wi_start_wrapper" Export ; 0x0000054c
               OpDecorate %40 NoSignedWrap ; 0x0000057c
               OpDecorate %40 NoUnsignedWrap ; 0x00000588
               OpDecorate %__itt_offload_wg_barrier_wrapper LinkageAttributes "__itt_offload_wg_barrier_wrapper" Export ; 0x00000594
               OpDecorate %__itt_offload_wi_resume_wrapper LinkageAttributes "__itt_offload_wi_resume_wrapper" Export ; 0x000005c8
               OpDecorate %__itt_offload_wi_finish_wrapper LinkageAttributes "__itt_offload_wi_finish_wrapper" Export ; 0x000005f8
               OpDecorate %69 Alignment 8 ; 0x00000628
               OpDecorate %71 SpecId 4285822057 ; 0x00000638
               OpDecorate %__itt_offload_wi_start_stub LinkageAttributes "__itt_offload_wi_start_stub" Export ; 0x00000648
               OpDecorate %110 Alignment 8 ; 0x00000674
               OpDecorate %111 SpecId 4285822057 ; 0x00000684
               OpDecorate %__itt_offload_wi_finish_stub LinkageAttributes "__itt_offload_wi_finish_stub" Export ; 0x00000694
               OpDecorate %135 SpecId 4285822057 ; 0x000006c4
               OpDecorate %__itt_offload_wg_barrier_stub LinkageAttributes "__itt_offload_wg_barrier_stub" Export ; 0x000006d4
               OpDecorate %144 Alignment 8 ; 0x00000704
               OpDecorate %145 SpecId 4285822057 ; 0x00000714
               OpDecorate %__itt_offload_wi_resume_stub LinkageAttributes "__itt_offload_wi_resume_stub" Export ; 0x00000724
               OpDecorate %167 Alignment 8 ; 0x00000754
               OpDecorate %168 Alignment 8 ; 0x00000764
               OpDecorate %170 Alignment 4 ; 0x00000774
               OpDecorate %177 Alignment 8 ; 0x00000784
               OpDecorate %178 Alignment 8 ; 0x00000794
               OpDecorate %182 Alignment 8 ; 0x000007a4
               OpDecorate %185 Alignment 8 ; 0x000007b4
               OpDecorate %186 Alignment 8 ; 0x000007c4
      %ulong = OpTypeInt 64 0 ; 0x000007d4
       %uint = OpTypeInt 32 0 ; 0x000007e4
      %uchar = OpTypeInt 8 0 ; 0x000007f4
%ulong_2147483648 = OpConstant %ulong 2147483648 ; 0x00000804
    %ulong_1 = OpConstant %ulong 1 ; 0x00000818
  %ulong_510 = OpConstant %ulong 510 ; 0x0000082c
     %uint_2 = OpConstant %uint 2 ; 0x00000840
   %uint_272 = OpConstant %uint 272 ; 0x00000850
   %ulong_64 = OpConstant %ulong 64 ; 0x00000860
    %ulong_3 = OpConstant %ulong 3 ; 0x00000874
         %71 = OpSpecConstant %uchar 0 ; 0x00000888
    %uchar_0 = OpConstant %uchar 0 ; 0x00000898
    %ulong_0 = OpConstant %ulong 0 ; 0x000008a8
    %ulong_2 = OpConstant %ulong 2 ; 0x000008bc
        %111 = OpSpecConstant %uchar 0 ; 0x000008d0
        %135 = OpSpecConstant %uchar 0 ; 0x000008e0
        %145 = OpSpecConstant %uchar 0 ; 0x000008f0
    %v3ulong = OpTypeVector %ulong 3 ; 0x00000900
%_ptr_CrossWorkgroup_v3ulong = OpTypePointer CrossWorkgroup %v3ulong ; 0x00000910
%_ptr_CrossWorkgroup_ulong = OpTypePointer CrossWorkgroup %ulong ; 0x00000920
       %void = OpTypeVoid ; 0x00000930
      %float = OpTypeFloat 32 ; 0x00000938
%_ptr_Workgroup_float = OpTypePointer Workgroup %float ; 0x00000944
%_ptr_CrossWorkgroup_float = OpTypePointer CrossWorkgroup %float ; 0x00000954
         %14 = OpTypeFunction %void %_ptr_Workgroup_float %_ptr_CrossWorkgroup_float %_ptr_CrossWorkgroup_float ; 0x00000964
         %22 = OpTypeFunction %void ; 0x0000097c
%_ptr_Generic_v3ulong = OpTypePointer Generic %v3ulong ; 0x00000988
       %bool = OpTypeBool ; 0x00000998
%_ptr_Generic_float = OpTypePointer Generic %float ; 0x000009a0
%_arr_ulong_ulong_3 = OpTypeArray %ulong %ulong_3 ; 0x000009b0
%_ptr_Function__arr_ulong_ulong_3 = OpTypePointer Function %_arr_ulong_ulong_3 ; 0x000009c0
%_ptr_Generic_ulong = OpTypePointer Generic %ulong ; 0x000009d0
%_ptr_Function_uchar = OpTypePointer Function %uchar ; 0x000009e0
%_ptr_Function_ulong = OpTypePointer Function %ulong ; 0x000009f0
        %101 = OpTypeFunction %void %_ptr_Generic_ulong %ulong %uint ; 0x00000a00
        %127 = OpTypeFunction %void %_ptr_Generic_ulong %ulong ; 0x00000a18
        %137 = OpTypeFunction %void %ulong ; 0x00000a2c
%_ptr_Function__ptr_Generic_ulong = OpTypePointer Function %_ptr_Generic_ulong ; 0x00000a3c
%_ptr_Function_uint = OpTypePointer Function %uint ; 0x00000a4c
%_ptr_Generic__ptr_Generic_ulong = OpTypePointer Generic %_ptr_Generic_ulong ; 0x00000a5c
%_ptr_Generic_uint = OpTypePointer Generic %uint ; 0x00000a6c
%__spirv_BuiltInLocalInvocationId = OpVariable %_ptr_CrossWorkgroup_v3ulong CrossWorkgroup ; 0x00000a7c
%__spirv_BuiltInWorkgroupId = OpVariable %_ptr_CrossWorkgroup_v3ulong CrossWorkgroup ; 0x00000a8c
%__spirv_BuiltInGlobalLinearId = OpVariable %_ptr_CrossWorkgroup_ulong CrossWorkgroup ; 0x00000a9c
%__spirv_BuiltInWorkgroupSize = OpVariable %_ptr_CrossWorkgroup_v3ulong CrossWorkgroup ; 0x00000aac
         %15 = OpFunction %void None %14 ; 0x00000abc
         %16 = OpFunctionParameter %_ptr_Workgroup_float ; 0x00000ad0
         %17 = OpFunctionParameter %_ptr_CrossWorkgroup_float ; 0x00000adc
         %18 = OpFunctionParameter %_ptr_CrossWorkgroup_float ; 0x00000ae8
         %19 = OpLabel ; 0x00000af4
         %24 = OpFunctionCall %void %__itt_offload_wi_start_wrapper ; 0x00000afc
         %26 = OpPtrCastToGeneric %_ptr_Generic_v3ulong %__spirv_BuiltInLocalInvocationId ; 0x00000b0c
         %34 = OpLoad %v3ulong %26 Aligned|NoAliasINTELMask 32 %33 ; 0x00000b1c
         %35 = OpCompositeExtract %ulong %34 0 ; 0x00000b38
         %38 = OpULessThan %bool %35 %ulong_2147483648 ; 0x00000b4c
               OpAssumeTrueKHR %38 ; 0x00000b60
         %40 = OpShiftLeftLogical %ulong %35 %ulong_1 ; 0x00000b68
         %42 = OpBitwiseAnd %ulong %40 %ulong_510 ; 0x00000b7c
         %43 = OpInBoundsPtrAccessChain %_ptr_CrossWorkgroup_float %17 %42 ; 0x00000b90
         %45 = OpPtrCastToGeneric %_ptr_Generic_float %43 ; 0x00000ba4
         %46 = OpLoad %float %45 Aligned 4 ; 0x00000bb4
         %47 = OpInBoundsPtrAccessChain %_ptr_Workgroup_float %16 %42 ; 0x00000bcc
         %48 = OpPtrCastToGeneric %_ptr_Generic_float %47 ; 0x00000be0
               OpStore %48 %46 Aligned 4 ; 0x00000bf0
         %50 = OpFunctionCall %void %__itt_offload_wg_barrier_wrapper ; 0x00000c04
               OpControlBarrier %uint_2 %uint_2 %uint_272 ; 0x00000c14
         %55 = OpFunctionCall %void %__itt_offload_wi_resume_wrapper ; 0x00000c24
         %57 = OpULessThan %bool %35 %ulong_64 ; 0x00000c34
               OpBranchConditional %57 %20 %21 ; 0x00000c48
         %20 = OpLabel ; 0x00000c58
         %58 = OpLoad %float %48 Aligned 4 ; 0x00000c60
         %59 = OpInBoundsPtrAccessChain %_ptr_CrossWorkgroup_float %18 %42 ; 0x00000c78
         %60 = OpPtrCastToGeneric %_ptr_Generic_float %59 ; 0x00000c8c
               OpStore %60 %58 Aligned 4 ; 0x00000c9c
               OpBranch %21 ; 0x00000cb0
         %21 = OpLabel ; 0x00000cb8
         %62 = OpFunctionCall %void %__itt_offload_wi_finish_wrapper ; 0x00000cc0
               OpReturn ; 0x00000cd0
               OpFunctionEnd ; 0x00000cd4
%__itt_offload_wi_start_wrapper = OpFunction %void Inline %22 ; 0x00000cd8
         %63 = OpLabel ; 0x00000cec
         %69 = OpVariable %_ptr_Function__arr_ulong_ulong_3 Function ; 0x00000cf4
         %73 = OpIEqual %bool %71 %uchar_0 ; 0x00000d04
         %74 = OpPtrCastToGeneric %_ptr_Generic_v3ulong %__spirv_BuiltInWorkgroupId ; 0x00000d18
         %76 = OpPtrCastToGeneric %_ptr_Generic_ulong %__spirv_BuiltInGlobalLinearId ; 0x00000d28
         %77 = OpPtrCastToGeneric %_ptr_Generic_v3ulong %__spirv_BuiltInWorkgroupSize ; 0x00000d38
               OpBranchConditional %73 %65 %64 ; 0x00000d48
         %64 = OpLabel ; 0x00000d58
         %79 = OpBitcast %_ptr_Function_uchar %69 ; 0x00000d60
               OpLifetimeStart %79 24 ; 0x00000d70
         %82 = OpInBoundsPtrAccessChain %_ptr_Function_ulong %69 %ulong_0 %ulong_0 ; 0x00000d7c
         %83 = OpPtrCastToGeneric %_ptr_Generic_ulong %82 ; 0x00000d94
         %84 = OpLoad %v3ulong %74 Aligned 32 ; 0x00000da4
         %85 = OpCompositeExtract %ulong %84 0 ; 0x00000dbc
               OpStore %83 %85 Aligned 8 ; 0x00000dd0
         %86 = OpInBoundsPtrAccessChain %_ptr_Function_ulong %69 %ulong_0 %ulong_1 ; 0x00000de4
         %87 = OpPtrCastToGeneric %_ptr_Generic_ulong %86 ; 0x00000dfc
         %88 = OpCompositeExtract %ulong %84 1 ; 0x00000e0c
               OpStore %87 %88 Aligned 8 ; 0x00000e20
         %90 = OpInBoundsPtrAccessChain %_ptr_Function_ulong %69 %ulong_0 %ulong_2 ; 0x00000e34
         %91 = OpPtrCastToGeneric %_ptr_Generic_ulong %90 ; 0x00000e4c
         %92 = OpCompositeExtract %ulong %84 2 ; 0x00000e5c
               OpStore %91 %92 Aligned 8 ; 0x00000e70
         %93 = OpLoad %ulong %76 Aligned 8 ; 0x00000e84
         %94 = OpLoad %v3ulong %77 Aligned 32 ; 0x00000e9c
         %95 = OpCompositeExtract %ulong %94 0 ; 0x00000eb4
         %96 = OpCompositeExtract %ulong %94 1 ; 0x00000ec8
         %97 = OpIMul %ulong %95 %96 ; 0x00000edc
         %98 = OpCompositeExtract %ulong %94 2 ; 0x00000ef0
         %99 = OpIMul %ulong %97 %98 ; 0x00000f04
        %100 = OpUConvert %uint %99 ; 0x00000f18
        %106 = OpFunctionCall %void %__itt_offload_wi_start_stub %83 %93 %100 ; 0x00000f28
               OpLifetimeStop %79 24 ; 0x00000f44
               OpBranch %65 ; 0x00000f50
         %65 = OpLabel ; 0x00000f58
               OpReturn ; 0x00000f60
               OpFunctionEnd ; 0x00000f64
%__itt_offload_wg_barrier_wrapper = OpFunction %void Inline %22 ; 0x00000f68
        %132 = OpLabel ; 0x00000f7c
        %136 = OpIEqual %bool %135 %uchar_0 ; 0x00000f84
               OpBranchConditional %136 %134 %133 ; 0x00000f98
        %133 = OpLabel ; 0x00000fa8
        %140 = OpFunctionCall %void %__itt_offload_wg_barrier_stub %ulong_0 ; 0x00000fb0
               OpBranch %134 ; 0x00000fc4
        %134 = OpLabel ; 0x00000fcc
               OpReturn ; 0x00000fd4
               OpFunctionEnd ; 0x00000fd8
%__itt_offload_wi_resume_wrapper = OpFunction %void Inline %22 ; 0x00000fdc
        %141 = OpLabel ; 0x00000ff0
        %144 = OpVariable %_ptr_Function__arr_ulong_ulong_3 Function ; 0x00000ff8
        %146 = OpIEqual %bool %145 %uchar_0 ; 0x00001008
        %147 = OpPtrCastToGeneric %_ptr_Generic_v3ulong %__spirv_BuiltInWorkgroupId ; 0x0000101c
        %148 = OpPtrCastToGeneric %_ptr_Generic_ulong %__spirv_BuiltInGlobalLinearId ; 0x0000102c
               OpBranchConditional %146 %143 %142 ; 0x0000103c
        %142 = OpLabel ; 0x0000104c
        %149 = OpBitcast %_ptr_Function_uchar %144 ; 0x00001054
               OpLifetimeStart %149 24 ; 0x00001064
        %150 = OpInBoundsPtrAccessChain %_ptr_Function_ulong %144 %ulong_0 %ulong_0 ; 0x00001070
        %151 = OpPtrCastToGeneric %_ptr_Generic_ulong %150 ; 0x00001088
        %152 = OpLoad %v3ulong %147 Aligned 32 ; 0x00001098
        %153 = OpCompositeExtract %ulong %152 0 ; 0x000010b0
               OpStore %151 %153 Aligned 8 ; 0x000010c4
        %154 = OpInBoundsPtrAccessChain %_ptr_Function_ulong %144 %ulong_0 %ulong_1 ; 0x000010d8
        %155 = OpPtrCastToGeneric %_ptr_Generic_ulong %154 ; 0x000010f0
        %156 = OpCompositeExtract %ulong %152 1 ; 0x00001100
               OpStore %155 %156 Aligned 8 ; 0x00001114
        %157 = OpInBoundsPtrAccessChain %_ptr_Function_ulong %144 %ulong_0 %ulong_2 ; 0x00001128
        %158 = OpPtrCastToGeneric %_ptr_Generic_ulong %157 ; 0x00001140
        %159 = OpCompositeExtract %ulong %152 2 ; 0x00001150
               OpStore %158 %159 Aligned 8 ; 0x00001164
        %160 = OpLoad %ulong %148 Aligned 8 ; 0x00001178
        %164 = OpFunctionCall %void %__itt_offload_wi_resume_stub %151 %160 ; 0x00001190
               OpLifetimeStop %149 24 ; 0x000011a8
               OpBranch %143 ; 0x000011b4
        %143 = OpLabel ; 0x000011bc
               OpReturn ; 0x000011c4
               OpFunctionEnd ; 0x000011c8
%__itt_offload_wi_finish_wrapper = OpFunction %void Inline %22 ; 0x000011cc
        %107 = OpLabel ; 0x000011e0
        %110 = OpVariable %_ptr_Function__arr_ulong_ulong_3 Function ; 0x000011e8
        %112 = OpIEqual %bool %111 %uchar_0 ; 0x000011f8
        %113 = OpPtrCastToGeneric %_ptr_Generic_v3ulong %__spirv_BuiltInWorkgroupId ; 0x0000120c
        %114 = OpPtrCastToGeneric %_ptr_Generic_ulong %__spirv_BuiltInGlobalLinearId ; 0x0000121c
               OpBranchConditional %112 %109 %108 ; 0x0000122c
        %108 = OpLabel ; 0x0000123c
        %115 = OpBitcast %_ptr_Function_uchar %110 ; 0x00001244
               OpLifetimeStart %115 24 ; 0x00001254
        %116 = OpInBoundsPtrAccessChain %_ptr_Function_ulong %110 %ulong_0 %ulong_0 ; 0x00001260
        %117 = OpPtrCastToGeneric %_ptr_Generic_ulong %116 ; 0x00001278
        %118 = OpLoad %v3ulong %113 Aligned 32 ; 0x00001288
        %119 = OpCompositeExtract %ulong %118 0 ; 0x000012a0
               OpStore %117 %119 Aligned 8 ; 0x000012b4
        %120 = OpInBoundsPtrAccessChain %_ptr_Function_ulong %110 %ulong_0 %ulong_1 ; 0x000012c8
        %121 = OpPtrCastToGeneric %_ptr_Generic_ulong %120 ; 0x000012e0
        %122 = OpCompositeExtract %ulong %118 1 ; 0x000012f0
               OpStore %121 %122 Aligned 8 ; 0x00001304
        %123 = OpInBoundsPtrAccessChain %_ptr_Function_ulong %110 %ulong_0 %ulong_2 ; 0x00001318
        %124 = OpPtrCastToGeneric %_ptr_Generic_ulong %123 ; 0x00001330
        %125 = OpCompositeExtract %ulong %118 2 ; 0x00001340
               OpStore %124 %125 Aligned 8 ; 0x00001354
        %126 = OpLoad %ulong %114 Aligned 8 ; 0x00001368
        %131 = OpFunctionCall %void %__itt_offload_wi_finish_stub %117 %126 ; 0x00001380
               OpLifetimeStop %115 24 ; 0x00001398
               OpBranch %109 ; 0x000013a4
        %109 = OpLabel ; 0x000013ac
               OpReturn ; 0x000013b4
               OpFunctionEnd ; 0x000013b8
%__itt_offload_wi_start_stub = OpFunction %void DontInline|OptNoneINTEL %101 ; 0x000013bc
        %103 = OpFunctionParameter %_ptr_Generic_ulong ; 0x000013d0
        %104 = OpFunctionParameter %ulong ; 0x000013dc
        %105 = OpFunctionParameter %uint ; 0x000013e8
        %165 = OpLabel ; 0x000013f4
        %167 = OpVariable %_ptr_Function__ptr_Generic_ulong Function ; 0x000013fc
        %168 = OpVariable %_ptr_Function_ulong Function ; 0x0000140c
        %170 = OpVariable %_ptr_Function_uint Function ; 0x0000141c
        %172 = OpPtrCastToGeneric %_ptr_Generic__ptr_Generic_ulong %167 ; 0x0000142c
        %173 = OpPtrCastToGeneric %_ptr_Generic_ulong %168 ; 0x0000143c
        %175 = OpPtrCastToGeneric %_ptr_Generic_uint %170 ; 0x0000144c
               OpStore %172 %103 Aligned 8 ; 0x0000145c
               OpStore %173 %104 Aligned 8 ; 0x00001470
               OpStore %175 %105 Aligned 4 ; 0x00001484
               OpReturn ; 0x00001498
               OpFunctionEnd ; 0x0000149c
%__itt_offload_wi_finish_stub = OpFunction %void DontInline|OptNoneINTEL %127 ; 0x000014a0
        %129 = OpFunctionParameter %_ptr_Generic_ulong ; 0x000014b4
        %130 = OpFunctionParameter %ulong ; 0x000014c0
        %176 = OpLabel ; 0x000014cc
        %177 = OpVariable %_ptr_Function__ptr_Generic_ulong Function ; 0x000014d4
        %178 = OpVariable %_ptr_Function_ulong Function ; 0x000014e4
        %179 = OpPtrCastToGeneric %_ptr_Generic__ptr_Generic_ulong %177 ; 0x000014f4
        %180 = OpPtrCastToGeneric %_ptr_Generic_ulong %178 ; 0x00001504
               OpStore %179 %129 Aligned 8 ; 0x00001514
               OpStore %180 %130 Aligned 8 ; 0x00001528
               OpReturn ; 0x0000153c
               OpFunctionEnd ; 0x00001540
%__itt_offload_wg_barrier_stub = OpFunction %void DontInline|OptNoneINTEL %137 ; 0x00001544
        %139 = OpFunctionParameter %ulong ; 0x00001558
        %181 = OpLabel ; 0x00001564
        %182 = OpVariable %_ptr_Function_ulong Function ; 0x0000156c
        %183 = OpPtrCastToGeneric %_ptr_Generic_ulong %182 ; 0x0000157c
               OpStore %183 %139 Aligned 8 ; 0x0000158c
               OpReturn ; 0x000015a0
               OpFunctionEnd ; 0x000015a4
%__itt_offload_wi_resume_stub = OpFunction %void DontInline|OptNoneINTEL %127 ; 0x000015a8
        %162 = OpFunctionParameter %_ptr_Generic_ulong ; 0x000015bc
        %163 = OpFunctionParameter %ulong ; 0x000015c8
        %184 = OpLabel ; 0x000015d4
        %185 = OpVariable %_ptr_Function__ptr_Generic_ulong Function ; 0x000015dc
        %186 = OpVariable %_ptr_Function_ulong Function ; 0x000015ec
        %187 = OpPtrCastToGeneric %_ptr_Generic__ptr_Generic_ulong %185 ; 0x000015fc
        %188 = OpPtrCastToGeneric %_ptr_Generic_ulong %186 ; 0x0000160c
               OpStore %187 %162 Aligned 8 ; 0x0000161c
               OpStore %188 %163 Aligned 8 ; 0x00001630
               OpReturn ; 0x00001644
               OpFunctionEnd ; 0x00001648
